<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mybatis.example.BlogMapper">

	<!-- 세션아이디와 회사 키값 확인 -->
	<select id="myCoAdminCheck1" parameterType="map" resultType="int">
		select count(*) from manager where mgr_email='${id}' and mgr_key='${key}' and mgr_admin in ('A','B','C');
	</select>
	
	<select id="myCoAdminCheck2" parameterType="map" resultType="int">
		select count(*) from manager where mgr_email='${id}' and mgr_key='${key}' and mgr_admin in ('A','B');
	</select>
	
	<select id="myCoAdminCheck3" parameterType="map" resultType="int">
		select count(*) from manager where mgr_email='${id}' and mgr_key='${key}' and mgr_admin='A';
	</select>
	
	<!-- 회사 키값으로 회사정보 출력 -->
	<select id="MyCoView" parameterType="map" resultType="com.daily.dto.MyCompany">
	select * from company where admin_key='${key}';
	</select>
  
  <!-- 로그인 -->
  <select id="login" parameterType="map" resultType="Map">
    select a.m_ide as 'id', a.m_name as 'name', b.mgr_key as 'key', b.co_name as 'company', 
    case b.mgr_admin 
    when "A" then "마스터"
    when "B" then "매니저"
    when "C" then "이용자"
    end as 'grade'
from (select * from member where m_ide='${id}' and m_pwd='${pwd}') a left join (select * from company, manager where co_code=mgr_company) b 
on a.m_ide=b.mgr_email;
  </select>
  
  <!-- 회원가입시 아이디(이메일) 중복확인 -->
  <select id="duplCheck" parameterType="String" resultType="boolean">
  	select if(count(*)=1,1,0) from member where m_ide='${id}';
  </select>
  
  <!-- 게시판 -->
  <!-- 자유게시판 -->
<select id="boardSelect" resultType="map">
select bd_index, bd_header, bd_title, bd_creator, bd_date, bd_view, ifnull(lk,0) lk from board left join (select distinct like_article, sum(like_state) lk from likey group by like_article) b on board.bd_index = b.like_article where bd_header not in ('이용가이드') order by bd_index desc;
</select>  
<select id="guideSelect" resultType="map">
select bd_index, bd_header, bd_title, bd_creator, bd_date, bd_view, ifnull(lk,0) lk from (select * from board where bd_header not in ("자유글", "공지사항","문의사항")) board left join (select distinct like_article, sum(like_state) lk from likey group by like_article) b on board.bd_index = b.like_article order by bd_index desc;
</select>
	<!-- 게시글 삭제 -->
	<delete id="deleteArticle" parameterType="String">
	delete from board where bd_index=${index};
	</delete>
	<!-- 게시글 정보조회 -->
	<select id="selectArticle" parameterType="String" resultType="com.daily.dto.Article">
	select * from board where bd_index=${index};
	</select>
	<!-- 게시글 조회수 +1-->
	<update id="viewArticle" parameterType="String">
	update board set bd_view = bd_view+1 where bd_index=${index};
	</update>
	<!-- 게시글 좋아요 확인 -->
	<select id="checkLikey" parameterType="map" resultType="map">
	select count(*) count, like_state from likey where like_article=${index} and like_email='${ID}';
	</select>
	<!-- 게시글 수정 -->
	<update id="updateArticle">
	update board set bd_header='${bd_header}', bd_title='${bd_title}', bd_article='${bd_article}', bd_date=${bd_date} where bd_index=${bd_index};
	</update>
	<!-- 게시글 작성 -->
	<insert id="writeArticle" parameterType="com.daily.dto.Article">
	insert into board(bd_creator, bd_header, bd_title, bd_article, bd_date) values(
'${bd_creator}','${bd_header}','${bd_title}','${bd_article}','${bd_date}');
	</insert>
  
  <!-- 회사 생성 -->
  <insert id="MyCoInsert" parameterType="com.daily.dto.MyCompany">
  insert into company values('${co_name}','${co_code}','${co_ceo}','${co_ind}','${co_stk}','${co_post1}','${co_addr1}','${co_post2}','${co_addr2}','${co_tel}','${co_phone}','${co_fax}','${co_div}','${co_closing}','${admin_key}');
  </insert>
  
 <!-- 회사 정보 수정 -->
  <update id="MyCoModify" parameterType="com.daily.dto.MyCompany">
  update company set co_name='${co_name}', co_code='${co_code}', co_ceo='${co_ceo}', co_ind='${co_ind}', co_stk='${co_stk}', co_post1='${co_post1}', co_addr1='${co_addr1}', co_post2='${co_post2}', co_addr2='${co_addr2}', co_tel='${co_tel}', co_phone='${co_phone}', co_fax='${co_fax}', co_div='${co_div}', co_closing='${co_closing}' where admin_key='${admin_key}';
  </update>
  
  <insert id="InsertManager" parameterType="com.daily.dto.Manager">
  insert into manager(mgr_email, mgr_company, mgr_admin, mgr_key) values('${mgr_email}','${mgr_company}','${mgr_admin}','${mgr_key}');
  </insert>
  
  <!-- 거래처 등록 -->
  <insert id="custInsert" parameterType="com.daily.dto.Customer">
  insert into customer(cust_name, cust_cla, cust_bizcode, cust_ceo, cust_ind, cust_stk, cust_post1, cust_addr1, cust_post2, cust_addr2,
  cust_tel, cust_phone, cust_fax, cust_email, cust_account, cust_memo, admin_key) values(
  '${cust_name}','${cust_cla}','${cust_bizcode}','${cust_ceo}','${cust_ind}','${cust_stk}','${cust_post1}','${cust_addr1}','${cust_post2}','${cust_addr2}',
  '${cust_tel}','${cust_phone}','${cust_fax}','${cust_email}','${cust_account}','${cust_memo}','${admin_key}');
  </insert>
  <!-- 거래처 리스트 조회(전체) -->
  <select id="custListView" parameterType="String" resultType="map">
  select * from customer where admin_key='${key}';
  </select>
  <!-- 거래처 상세 정보 -->
  <select id="custViewDetail" parameterType="map" resultType="com.daily.dto.Customer">
  select * from customer where cust_code=${code} and admin_key='${admin_key}';
  </select>
  <!-- 거래처 삭제 -->
  <delete id="custDelete" parameterType="map">
  delete from customer where cust_code=${code} and admin_key='${admin_key}';
  </delete>
  <!-- 거래처 정보 수정 -->
  <update id="custModify" parameterType="com.daily.dto.Customer">
    update customer set cust_name='${cust_name}', cust_cla='${cust_cla}', cust_bizcode='${cust_bizcode}', cust_ceo='${cust_ceo}', cust_ind='${cust_ind}', cust_stk='${cust_stk}', cust_post1='${cust_post1}', cust_addr1='${cust_addr1}', cust_post2='${cust_post2}', cust_addr2='${cust_addr2}',
  cust_tel='${cust_tel}', cust_phone='${cust_phone}', cust_fax='${cust_fax}', cust_email='${cust_email}', cust_account='${cust_account}', cust_memo='${cust_memo}' where cust_code=${cust_code} and admin_key='${admin_key}';
  </update>
  <!-- 거래처 검색(전체 컬럼) -->
  <select id="custSearchAll" parameterType="map" resultType="map">
  select * from (select * from customer where admin_key='${adkey}') cus where concat(cust_name,cust_cla,cust_bizcode,cust_ceo,cust_tel,cust_phone,cust_fax,cust_ind,cust_stk,cust_addr1,cust_addr2,cust_email) regexp '${keyword}' ${sortOption};
  </select>
  <!-- 거래처 검색(검색어 없음) -->
  <select id="custSearchSpace" parameterType="map" resultType="map">
  select * from (select * from customer where admin_key='${adkey}') cust ${sortOption}; 
  </select>
  <!-- 거래처 검색 -->
  <select id="custSearchList" parameterType="map" resultType="map">
  select * from customer where admin_key='${adkey}' and ${option} like '%${keyword}%' ${sortOption};
  </select>
  <!-- 상품 목록조회 -->
  <select id="stkListView" parameterType="String" resultType="map">
  select * from stock where admin_key='${key}';
  </select>
  <!-- 상품 생성 -->
  <insert id="stkInsert" parameterType="com.daily.dto.Stock">
  insert into stock(stk_name, stk_cla, stk_size1, stk_size2, stk_unit, stk_price, stk_vat, stk_date, stk_amount, stk_memo, admin_key) values(
  '${stk_name}','${stk_cla}','${stk_size1}','${stk_size2}','${stk_unit}',${stk_price},'${stk_vat}',${stk_date},'${stk_amount}','${stk_memo}','${admin_key}');
  </insert>
  <!-- 상품 상세 조회 -->
	<select id="stkViewDetail" parameterType="map" resultType="com.daily.dto.Stock">
	select * from (select * from stock where admin_key="${admin_key}") stk where stk_code=${code};
	</select>  
	<!-- 상품 정보 수정 -->
	<update id="stkModify" parameterType="com.daily.dto.Stock">
		update stock set stk_name='${stk_name}', stk_cla='${stk_cla}', stk_size1='${stk_size1}', stk_size2='${stk_size2}', stk_unit='${stk_unit}', stk_price=${stk_price}, stk_vat='${stk_vat}', stk_date=${stk_date}, stk_amount='${stk_amount}', stk_memo='${stk_memo}' where stk_code=${stk_code} and admin_key='${admin_key}';
	</update>
	<!-- 상품 정보 삭제 -->
	<delete id="stkDelete">
		delete from stock where stk_code=${code} and admin_key='${admin_key}';
	</delete>
<!-- 상품 정보 검색 (분류 전체, 검색어 있음) -->
	<select id="stkSearchAll" parameterType="map" resultType="map">
		select * from (select * from stock where admin_key='${adkey}') stk where concat(stk_name,stk_cla,stk_size1,stk_size2,stk_date) regexp '${keyword}' ${sortOption};
	</select>
<!-- 상품 정보 검색 (검색어 없음) -->
   <select id="stkSearchSpace" parameterType="map" resultType="map">
  select * from (select * from stock where admin_key='${adkey}') stk ${sortOption}; 
  </select>
<!-- 상품 검색 (분류 있음, 검색어 있음) -->
  <select id="stkSearchList" parameterType="map" resultType="map">
  select * from stock where admin_key='${adkey}' and ${option} like '%${keyword}%' ${sortOption};
  </select>
<!-- 계좌 목록 조회 -->
  <select id="acctListView" parameterType="String" resultType="map">
  select * from bank_account where admin_key='${key}';
  </select>
<!-- 계좌 생성 -->
    <insert id="acctInsert" parameterType="com.daily.dto.BankAccount">
  insert into bank_account(acct_name, acct_bank, acct_owner, acct_id, acct_cla, acct_memo, admin_key) values('${acct_name}','${acct_bank}','${acct_owner}','${acct_id}','${acct_cla}','${acct_memo}','${admin_key}');
  </insert>
<!-- 계좌 상세 조회 -->
	<select id="acctViewDetail" parameterType="map" resultType="com.daily.dto.BankAccount">
	select * from (select * from bank_account where admin_key="${admin_key}") acct where acct_code=${code};
	</select> 
<!-- 계좌 정보 수정 -->
	<update id="acctModify" parameterType="com.daily.dto.BankAccount">
		update bank_account set acct_name='${acct_name}', acct_cla='${acct_cla}', acct_bank='${acct_bank}', acct_owner='${acct_owner}', acct_id='${acct_id}', acct_memo='${acct_memo}' where acct_code=${acct_code} and admin_key='${admin_key}';
	</update>
<!-- 상품 정보 삭제 -->
	<delete id="acctDelete">
		delete from bank_account where acct_code=${code} and admin_key='${admin_key}';
	</delete>
<!-- 상품 정보 검색 (분류 전체, 검색어 있음) -->
	<select id="acctSearchAll" parameterType="map" resultType="map">
		select * from (select * from bank_account where admin_key='${adkey}') acct where concat(acct_name,acct_cla,acct_bank,acct_owner,acct_id) regexp '${keyword}' ${sortOption};
	</select>
<!-- 상품 정보 검색 (검색어 없음) -->
   <select id="acctSearchSpace" parameterType="map" resultType="map">
  select * from (select * from bank_account where admin_key='${adkey}') acct ${sortOption}; 
  </select>
<!-- 상품 검색 (분류 있음, 검색어 있음) -->
  <select id="acctSearchList" parameterType="map" resultType="map">
  select * from bank_account where admin_key='${adkey}' and ${option} like '%${keyword}%' ${sortOption};
  </select>
  
 <!-- 메인페이지 게시글 -->
  <select id="mainPageArticles" resultType="map">
  select bd_index, bd_title as 'article', date_format(bd_date,"%m-%d") as 'date' from board order by bd_index desc limit 0,6;
  </select>
  
  <!-- 메인페이지 이용안내 -->
  <select id="mainPageGuide" resultType="map">
  select bd_index, bd_title as 'guide', date_format(bd_date,"%m-%d") as 'date' from board order by bd_index desc limit 0,6;
  </select>
  
 <!-- 매출 차트 데이터 출력 -->
 <select id="salesChartData" resultType="map" parameterType="String">
 select date_format(tran_date, '%m-%d') as date, sum(sl_amount)/1000 as amount
from (
	SELECT tran_index, tran_date 
	FROM transaction 
	WHERE admin_key="${key}" 
		and tran_cla="매출" 
		and tran_date BETWEEN DATE_ADD(NOW(),INTERVAL -10 DAY ) AND NOW()
		) tran 
left join tran_slip as slip
on slip.sl_tran = tran.tran_index
where sl_sub=108
group by tran_date;
 </select>
 
 
 <!-- 거래처 매출 순위 -->
 <select id="salesCustChart" resultType="map" parameterType="String">
select cust_name, sum(sl_amount)/1000 as amount
from (select * 
	from transaction 
    where tran_cla="매출" and 
    month(tran_date) = month(now()) and 
    year(tran_date) = year(now())
    and admin_key='${key}') tran
left join (select * 
	from tran_slip 
    where sl_sub = 108) slip
on slip.sl_tran=tran.tran_index
left join customer
on sl_cust = cust_code
group by sl_cust 
order by amount desc
limit 0, 5;
 </select>
	  
  <!-- 거래 입력 -->
  <!-- 새로입력 -->
  <insert id="insertTransaction" parameterType="map" >
  insert into transaction values(null, '${slipType}', '${date}', '${admin_key}', '${memo}');
  <selectKey keyProperty="lastid" resultType="Integer" order="AFTER">
  select last_insert_id();
  </selectKey>
  </insert>
  <insert id="insertTrans" parameterType="map">
		<choose>
		 	<when test="slipType != null and slipType == '매출'">
					insert into tran_slip values(null, ${lastid}, 108, ${custcode}, ${total}, '차변'),(null, ${lastid}, 412, ${custcode}, ${amount}, '대변')
			   <if test='vat != null and vat != ""'>
					,(null, ${lastid}, 255, ${custcode}, ${vat}, '대변')
			   </if>
			   ;
		 	</when>
		 	<when test="slipType != null and slipType == '수금'">
		 		<choose>
		 			<when test="type != null and type == '101'"><!-- 101:현금 , 108:외상매출금 -->
						insert into tran_slip values(null, ${lastid}, 101, ${custcode}, ${collect}, '차변'),(null, ${lastid}, 108, ${custcode}, ${collect}, '대변');
		 			</when>
		 			<when test="type != null and type == '102'"><!-- 102:당좌예금 , 108:외상매출금 -->
						insert into tran_slip values(null, ${lastid}, 102, ${custcode}, ${collect}, '차변'),(null, ${lastid}, 108, ${custcode}, ${collect}, '대변');
		 			</when>
		 		</choose>
		 	</when>
		</choose>
	</insert>
	<insert id="insertTransBook" parameterType="map">
			<choose>
			 	<when test="slipType != null and slipType == '매출'">
					insert into tran_stk values(null, ${lastid}, ${stkcode}, ${quantity}, ${price});
			 	</when>
			 	<when test="slipType != null and slipType == '수금'">
					insert into tran_acct values(null, ${lastid}, ${acct_code}, ${collect});
			 	</when>
			</choose>
	</insert>
	
	
<!-- 수정 -->
	<select id="vatCheck" parameterType="map" resultType="String">
	select sl_amount from tran_slip where sl_tran=${tran_index} and sl_sub=255 and sl_cust=${custcode};
	</select>
	<update id="updateTrans" parameterType="map">
		<choose>
		 	<when test="slipType != null and slipType == '매출'">
					update tran_slip set sl_amount=${total} where sl_tran=${tran_index} and sl_sub=108 and sl_cust =${custcode};
					update tran_slip set sl_amount=${amount} where sl_tran=${tran_index} and sl_sub=412 and sl_cust =${custcode};
			   <if test='vat != null and vat != ""'>
			   		update tran_slip set sl_amount=${vat} where sl_tran=45 and sl_sub=255 and sl_cust=${custcode};
			   </if>
		 	</when>
		 	<when test="slipType != null and slipType == '수금'">
		 		<choose>
		 			<when test="type != null and type == '101'"><!-- 101:현금 , 108:외상매출금 -->
		 				update tran_slip set sl_amount=${collect}, sl_sub=101 where sl_tran=${tran_index} and sl_cust =${custcode} and sl_cla='차변';
		 				update tran_slip set sl_amount=${collect} where sl_tran=${tran_index} and sl_sub=108 and sl_cust =${custcode};
		 			</when>
		 			<when test="type != null and type == '102'"><!-- 102:당좌예금 , 108:외상매출금 -->
						update tran_slip set sl_amount=${collect}, sl_sub=102 where sl_tran=${tran_index} and sl_cust =${custcode} and sl_cla='차변';
		 				update tran_slip set sl_amount=${collect} where sl_tran=${tran_index} and sl_sub=108 and sl_cust =${custcode};
		 			</when>
		 		</choose>
		 	</when>
		</choose>
	</update>
		<update id="updateTransAndVat" parameterType="map">
		<choose>
		 	<when test="slipType != null and slipType == '매출'">
					update tran_slip set sl_amount=${total} where sl_tran=${tran_index} and sl_sub=108 and sl_cust =${custcode};
					update tran_slip set sl_amount=${amount} where sl_tran=${tran_index} and sl_sub=412 and sl_cust =${custcode};
			   <if test='vat != null and vat != ""'>
		   			insert into tran_slip values(null, ${lastid}, 255, ${custcode}, ${vat}, '대변');
			   </if>
		 	</when>
		 	<when test="slipType != null and slipType == '수금'">
		 		<choose>
		 			<when test="type != null and type == '101'"><!-- 101:현금 , 108:외상매출금 -->
		 				update tran_slip set sl_amount=${collect}, sl_sub=101 where sl_tran=${tran_index} and sl_cust =${custcode} and sl_cla='차변';
		 				update tran_slip set sl_amount=${collect} where sl_tran=${tran_index} and sl_sub=108 and sl_cust =${custcode};
		 			</when>
		 			<when test="type != null and type == '102'"><!-- 102:당좌예금 , 108:외상매출금 -->
						update tran_slip set sl_amount=${collect}, sl_sub=102 where sl_tran=${tran_index} and sl_cust =${custcode} and sl_cla='차변';
		 				update tran_slip set sl_amount=${collect} where sl_tran=${tran_index} and sl_sub=108 and sl_cust =${custcode};
		 			</when>
		 		</choose>
		 	</when>
		</choose>
	</update>
	<update id="updateTransBook" parameterType="map">
			<choose>
			 	<when test="slipType != null and slipType == '매출'">
			 		update tran_stk set ts_stk=${stkcode}, ts_quantity=${quantity}, ts_price=${price} where ts_tran=${tran_index};
			 	</when>
			 	<when test="slipType != null and slipType == '수금'">
			 		update tran_acct set ta_acct=${acct_code}, ta_amount=${collect} where ta_tran=${tran_index};
			 	</when>
			</choose>
	</update>
	
<!-- 수정 -->
	<select id="vatCheckPur" parameterType="map" resultType="String">
	select sl_amount from tran_slip where sl_tran=${tran_index} and sl_sub=135 and sl_cust=${custcode};
	</select>
	<update id="updateTransPur" parameterType="map">
		<choose>
		 	<when test="slipType != null and slipType == '매입'"><!-- 460:매입 ,  251: 외상매입금, 135:부가세 대급금 -->
					update tran_slip set sl_amount=${total} where sl_tran=${tran_index} and sl_sub=251 and sl_cust =${custcode};
					update tran_slip set sl_amount=${amount} where sl_tran=${tran_index} and sl_sub=460 and sl_cust =${custcode};
			   <if test='vat != null and vat != ""'>
			   		update tran_slip set sl_amount=${vat} where sl_tran=45 and sl_sub=135 and sl_cust=${custcode};
			   </if>
		 	</when>
		 	<when test="slipType != null and slipType == '지출'">
		 		<choose>
		 			<when test="type != null and type == '101'"><!-- 101:현금 , 108:외상매출금 -->
		 				update tran_slip set sl_amount=${collect}, sl_sub=101 where sl_tran=${tran_index} and sl_cust =${custcode} and sl_cla='대변';
		 				update tran_slip set sl_amount=${collect} where sl_tran=${tran_index} and sl_sub=108 and sl_cust =${custcode};
		 			</when>
		 			<when test="type != null and type == '102'"><!-- 102:당좌예금 , 108:외상매출금 -->
						update tran_slip set sl_amount=${collect}, sl_sub=102 where sl_tran=${tran_index} and sl_cust =${custcode} and sl_cla='대변';
		 				update tran_slip set sl_amount=${collect} where sl_tran=${tran_index} and sl_sub=108 and sl_cust =${custcode};
		 			</when>
		 		</choose>
		 	</when>
		</choose>
	</update>
		<update id="updateTransAndVatPur" parameterType="map">
		<choose>
		 	<when test="slipType != null and slipType == '매출'"><!-- 460:매입 ,  251: 외상매입금, 135:부가세 대급금 -->
					update tran_slip set sl_amount=${total} where sl_tran=${tran_index} and sl_sub=251 and sl_cust =${custcode};
					update tran_slip set sl_amount=${amount} where sl_tran=${tran_index} and sl_sub=460 and sl_cust =${custcode};
			   <if test='vat != null and vat != ""'>
		   			insert into tran_slip values(null, ${lastid}, 135, ${custcode}, ${vat}, '대변');
			   </if>
		 	</when>
		 	<when test="slipType != null and slipType == '수금'">
		 		<choose>
		 			<when test="type != null and type == '101'"><!-- 101:현금 , 108:외상매출금 -->
		 				update tran_slip set sl_amount=${collect}, sl_sub=101 where sl_tran=${tran_index} and sl_cust =${custcode} and sl_cla='대변';
		 				update tran_slip set sl_amount=${collect} where sl_tran=${tran_index} and sl_sub=251 and sl_cust =${custcode};
		 			</when>
		 			<when test="type != null and type == '102'"><!-- 102:당좌예금 , 108:외상매출금 -->
						update tran_slip set sl_amount=${collect}, sl_sub=102 where sl_tran=${tran_index} and sl_cust =${custcode} and sl_cla='대변';
		 				update tran_slip set sl_amount=${collect} where sl_tran=${tran_index} and sl_sub=251 and sl_cust =${custcode};
		 			</when>
		 		</choose>
		 	</when>
		</choose>
	</update>
	<update id="updateTransBookPur" parameterType="map">
			<choose>
			 	<when test="slipType != null and slipType == '매입'">
			 		update tran_stk set ts_stk=${stkcode}, ts_quantity=${quantity}, ts_price=${price} where ts_tran=${tran_index};
			 	</when>
			 	<when test="slipType != null and slipType == '지출'">
			 		update tran_acct set ta_acct=${acct_code}, ta_amount=${collect} where ta_tran=${tran_index};
			 	</when>
			</choose>
	</update>
	
	
		<!-- 매출전표 조회 -->
	<select id="selectSlipList" parameterType="map" resultType="map">
	select tran_index, tran_cla, sl_cust, amount, vat, stk_code, stk_name, size, ts_quantity, ts_price, stk_vat, ta_acct, ta_amount, acct_name, sl_sub, cu
from (select tran_index, tran_cla
	from transaction
	where tran_date = '${date}' and admin_key = '${admin_key}') tran
left join (select sl_tran, sl_amount amount, sl_cust
		from tran_slip
		where sl_sub = 412 and sl_cla='대변') sal
on tran.tran_index = sal.sl_tran
left join (select sl_tran, sl_amount vat
		from tran_slip
		where sl_sub = 255 and sl_cla='대변') vat
on tran.tran_index = vat.sl_tran
left join (select ts_tran, stk_code, ts_quantity, ts_price, stk_name, concat(stk_size1,"/",stk_size2) size, stk_vat
			from tran_stk
			left join stock on ts_stk = stk_code) stk
on tran.tran_index = stk.ts_tran
left join (select ta_tran, ta_acct, ta_amount, acct_name
			from tran_acct
			left join bank_account on ta_acct = acct_code) acct
on tran.tran_index = acct.ta_tran
left join (select sl_tran, sl_sub, sl_amount, sl_cust cu
			from tran_slip
			where sl_sub in (101, 102) and sl_cla = "차변") accts
on tran.tran_index = accts.sl_tran
where sl_cust = ${custcode} or cu = ${custcode}
order by tran_index;
	</select>
	<!-- 매입전표 조회 -->
		<select id="selectSlipListPurcharse" parameterType="map" resultType="map">
	select tran_index, tran_cla, sl_cust, amount, vat, stk_code, stk_name, size, ts_quantity, ts_price, stk_vat, ta_acct, ta_amount*-1 ta_amount, acct_name, sl_sub, cu
from (select tran_index, tran_cla
	from transaction
	where tran_date = '${date}' and admin_key = '${admin_key}') tran
left join (select sl_tran, sl_amount amount, sl_cust
		from tran_slip
		where sl_sub = 460 and sl_cla='차변') sal
on tran.tran_index = sal.sl_tran
left join (select sl_tran, sl_amount vat
		from tran_slip
		where sl_sub = 135 and sl_cla='차변') vat
on tran.tran_index = vat.sl_tran
left join (select ts_tran, stk_code, ts_quantity, ts_price, stk_name, concat(stk_size1,"/",stk_size2) size, stk_vat
			from tran_stk
			left join stock on ts_stk = stk_code) stk
on tran.tran_index = stk.ts_tran
left join (select ta_tran, ta_acct, ta_amount, acct_name
			from tran_acct
			left join bank_account on ta_acct = acct_code) acct
on tran.tran_index = acct.ta_tran
left join (select sl_tran, sl_sub, sl_amount, sl_cust cu
			from tran_slip
			where sl_sub in (101, 102) and sl_cla = "대변") accts
on tran.tran_index = accts.sl_tran
where sl_cust = ${custcode} or cu = ${custcode}
order by tran_index;
	</select>
	
	  <!-- 새로입력 -->
  <insert id="insertPurcharse" parameterType="map" >
  insert into transaction values(null, '${slipType}', '${date}', '${admin_key}', '${memo}');
  <selectKey keyProperty="lastid" resultType="Integer" order="AFTER">
  select last_insert_id();
  </selectKey>
  </insert>
  <insert id="insertTransPurcharse" parameterType="map">
		<choose>
		 	<when test="slipType != null and slipType == '매입'"><!-- 460:매입 ,  251: 외상매입금, 135:부가세 대급금 -->
					insert into tran_slip values(null, ${lastid}, 251, ${custcode}, ${total}, '대변'),(null, ${lastid}, 460, ${custcode}, ${amount}, '차변')
			   <if test='vat != null and vat != ""'>
					,(null, ${lastid}, 135, ${custcode}, ${vat}, '차변')
			   </if>
			   ;
		 	</when>
		 	<when test="slipType != null and slipType == '지출'">
		 		<choose>
		 			<when test="type != null and type == '101'"><!-- 101:현금 , 251:외상매입금 -->
						insert into tran_slip values(null, ${lastid}, 101, ${custcode}, ${collect}, '대변'),(null, ${lastid}, 108, ${custcode}, ${collect}, '차변');
		 			</when>
		 			<when test="type != null and type == '102'"><!-- 102:당좌예금 , 251:외상매입금 -->
						insert into tran_slip values(null, ${lastid}, 102, ${custcode}, ${collect}, '대변'),(null, ${lastid}, 108, ${custcode}, ${collect}, '차변');
		 			</when>
		 		</choose>
		 	</when>
		</choose>
	</insert>
	<insert id="insertTransBookPurcharse" parameterType="map">
			<choose>
			 	<when test="slipType != null and slipType == '매입'">
					insert into tran_stk values(null, ${lastid}, ${stkcode}, ${quantity}, ${price});
			 	</when>
			 	<when test="slipType != null and slipType == '지출'">
					insert into tran_acct values(null, ${lastid}, ${acct_code}, -${collect});
			 	</when>
			</choose>
	</insert>
	
	<!-- 전표 삭제 -->
	
	<delete id="deleteTran" parameterType="map">
	delete from transaction where admin_key='${admin_key}' and tran_index=${index};
	delete from tran_slip where sl_tran=${index};
	delete from tran_stk where ts_tran=${index};
	delete from tran_acct where ta_tran=${index};
	</delete>
	
	<select id="selectSubject" parameterType="String" resultType="map">
	select * from (select * from acct_subject where sub_code > 500) acc_subject where sub_name like '%${key}%';
	</select>
	
	
</mapper>